//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("KartingAppModel", "FK_RaceResults_Drivers", "Drivers", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KartingApp.Domain.Drivers), "RaceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KartingApp.Domain.RaceResults), true)]
[assembly: EdmRelationshipAttribute("KartingAppModel", "FK_RaceResults_Races", "Races", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KartingApp.Domain.Races), "RaceResults", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KartingApp.Domain.RaceResults), true)]
[assembly: EdmRelationshipAttribute("KartingAppModel", "FK_Races_Tracks", "Tracks", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(KartingApp.Domain.Tracks), "Races", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(KartingApp.Domain.Races), true)]

#endregion

namespace KartingApp.Domain
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class AppHarbor_KartingApp_Database : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new AppHarbor_KartingApp_Database object using the connection string found in the 'AppHarbor_KartingApp_Database' section of the application configuration file.
        /// </summary>
        public AppHarbor_KartingApp_Database() : base("name=AppHarbor_KartingApp_Database", "AppHarbor_KartingApp_Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AppHarbor_KartingApp_Database object.
        /// </summary>
        public AppHarbor_KartingApp_Database(string connectionString) : base(connectionString, "AppHarbor_KartingApp_Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new AppHarbor_KartingApp_Database object.
        /// </summary>
        public AppHarbor_KartingApp_Database(EntityConnection connection) : base(connection, "AppHarbor_KartingApp_Database")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Drivers> Drivers
        {
            get
            {
                if ((_Drivers == null))
                {
                    _Drivers = base.CreateObjectSet<Drivers>("Drivers");
                }
                return _Drivers;
            }
        }
        private ObjectSet<Drivers> _Drivers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<RaceResults> RaceResults
        {
            get
            {
                if ((_RaceResults == null))
                {
                    _RaceResults = base.CreateObjectSet<RaceResults>("RaceResults");
                }
                return _RaceResults;
            }
        }
        private ObjectSet<RaceResults> _RaceResults;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Races> Races
        {
            get
            {
                if ((_Races == null))
                {
                    _Races = base.CreateObjectSet<Races>("Races");
                }
                return _Races;
            }
        }
        private ObjectSet<Races> _Races;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tracks> Tracks
        {
            get
            {
                if ((_Tracks == null))
                {
                    _Tracks = base.CreateObjectSet<Tracks>("Tracks");
                }
                return _Tracks;
            }
        }
        private ObjectSet<Tracks> _Tracks;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Drivers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToDrivers(Drivers drivers)
        {
            base.AddObject("Drivers", drivers);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RaceResults EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaceResults(RaceResults raceResults)
        {
            base.AddObject("RaceResults", raceResults);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Races EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRaces(Races races)
        {
            base.AddObject("Races", races);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Tracks EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTracks(Tracks tracks)
        {
            base.AddObject("Tracks", tracks);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KartingAppModel", Name="Drivers")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Drivers : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Drivers object.
        /// </summary>
        /// <param name="driverID">Initial value of the DriverID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static Drivers CreateDrivers(global::System.Int32 driverID, global::System.String name)
        {
            Drivers drivers = new Drivers();
            drivers.DriverID = driverID;
            drivers.Name = name;
            return drivers;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DriverID
        {
            get
            {
                return _DriverID;
            }
            set
            {
                if (_DriverID != value)
                {
                    OnDriverIDChanging(value);
                    ReportPropertyChanging("DriverID");
                    _DriverID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("DriverID");
                    OnDriverIDChanged();
                }
            }
        }
        private global::System.Int32 _DriverID;
        partial void OnDriverIDChanging(global::System.Int32 value);
        partial void OnDriverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Hometown
        {
            get
            {
                return _Hometown;
            }
            set
            {
                OnHometownChanging(value);
                ReportPropertyChanging("Hometown");
                _Hometown = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Hometown");
                OnHometownChanged();
            }
        }
        private global::System.String _Hometown;
        partial void OnHometownChanging(global::System.String value);
        partial void OnHometownChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_RaceResults_Drivers", "RaceResults")]
        public EntityCollection<RaceResults> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResults>("KartingAppModel.FK_RaceResults_Drivers", "RaceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResults>("KartingAppModel.FK_RaceResults_Drivers", "RaceResults", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KartingAppModel", Name="RaceResults")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class RaceResults : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new RaceResults object.
        /// </summary>
        /// <param name="raceResultID">Initial value of the RaceResultID property.</param>
        /// <param name="raceID">Initial value of the RaceID property.</param>
        /// <param name="driverID">Initial value of the DriverID property.</param>
        public static RaceResults CreateRaceResults(global::System.Int32 raceResultID, global::System.Int32 raceID, global::System.Int32 driverID)
        {
            RaceResults raceResults = new RaceResults();
            raceResults.RaceResultID = raceResultID;
            raceResults.RaceID = raceID;
            raceResults.DriverID = driverID;
            return raceResults;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceResultID
        {
            get
            {
                return _RaceResultID;
            }
            set
            {
                if (_RaceResultID != value)
                {
                    OnRaceResultIDChanging(value);
                    ReportPropertyChanging("RaceResultID");
                    _RaceResultID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceResultID");
                    OnRaceResultIDChanged();
                }
            }
        }
        private global::System.Int32 _RaceResultID;
        partial void OnRaceResultIDChanging(global::System.Int32 value);
        partial void OnRaceResultIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                OnRaceIDChanging(value);
                ReportPropertyChanging("RaceID");
                _RaceID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("RaceID");
                OnRaceIDChanged();
            }
        }
        private global::System.Int32 _RaceID;
        partial void OnRaceIDChanging(global::System.Int32 value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 DriverID
        {
            get
            {
                return _DriverID;
            }
            set
            {
                OnDriverIDChanging(value);
                ReportPropertyChanging("DriverID");
                _DriverID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DriverID");
                OnDriverIDChanged();
            }
        }
        private global::System.Int32 _DriverID;
        partial void OnDriverIDChanging(global::System.Int32 value);
        partial void OnDriverIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Double> BestLap
        {
            get
            {
                return _BestLap;
            }
            set
            {
                OnBestLapChanging(value);
                ReportPropertyChanging("BestLap");
                _BestLap = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("BestLap");
                OnBestLapChanged();
            }
        }
        private Nullable<global::System.Double> _BestLap;
        partial void OnBestLapChanging(Nullable<global::System.Double> value);
        partial void OnBestLapChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_RaceResults_Drivers", "Drivers")]
        public Drivers Drivers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drivers>("KartingAppModel.FK_RaceResults_Drivers", "Drivers").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drivers>("KartingAppModel.FK_RaceResults_Drivers", "Drivers").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Drivers> DriversReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Drivers>("KartingAppModel.FK_RaceResults_Drivers", "Drivers");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Drivers>("KartingAppModel.FK_RaceResults_Drivers", "Drivers", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_RaceResults_Races", "Races")]
        public Races Races
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("KartingAppModel.FK_RaceResults_Races", "Races").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("KartingAppModel.FK_RaceResults_Races", "Races").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Races> RacesReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Races>("KartingAppModel.FK_RaceResults_Races", "Races");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Races>("KartingAppModel.FK_RaceResults_Races", "Races", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KartingAppModel", Name="Races")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Races : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Races object.
        /// </summary>
        /// <param name="raceID">Initial value of the RaceID property.</param>
        /// <param name="trackID">Initial value of the TrackID property.</param>
        /// <param name="date">Initial value of the Date property.</param>
        public static Races CreateRaces(global::System.Int32 raceID, global::System.Int32 trackID, global::System.DateTime date)
        {
            Races races = new Races();
            races.RaceID = raceID;
            races.TrackID = trackID;
            races.Date = date;
            return races;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RaceID
        {
            get
            {
                return _RaceID;
            }
            set
            {
                if (_RaceID != value)
                {
                    OnRaceIDChanging(value);
                    ReportPropertyChanging("RaceID");
                    _RaceID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RaceID");
                    OnRaceIDChanged();
                }
            }
        }
        private global::System.Int32 _RaceID;
        partial void OnRaceIDChanging(global::System.Int32 value);
        partial void OnRaceIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackID
        {
            get
            {
                return _TrackID;
            }
            set
            {
                OnTrackIDChanging(value);
                ReportPropertyChanging("TrackID");
                _TrackID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("TrackID");
                OnTrackIDChanged();
            }
        }
        private global::System.Int32 _TrackID;
        partial void OnTrackIDChanging(global::System.Int32 value);
        partial void OnTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Date
        {
            get
            {
                return _Date;
            }
            set
            {
                OnDateChanging(value);
                ReportPropertyChanging("Date");
                _Date = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Date");
                OnDateChanged();
            }
        }
        private global::System.DateTime _Date;
        partial void OnDateChanging(global::System.DateTime value);
        partial void OnDateChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_RaceResults_Races", "RaceResults")]
        public EntityCollection<RaceResults> RaceResults
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<RaceResults>("KartingAppModel.FK_RaceResults_Races", "RaceResults");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<RaceResults>("KartingAppModel.FK_RaceResults_Races", "RaceResults", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_Races_Tracks", "Tracks")]
        public Tracks Tracks
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tracks>("KartingAppModel.FK_Races_Tracks", "Tracks").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tracks>("KartingAppModel.FK_Races_Tracks", "Tracks").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Tracks> TracksReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Tracks>("KartingAppModel.FK_Races_Tracks", "Tracks");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Tracks>("KartingAppModel.FK_Races_Tracks", "Tracks", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="KartingAppModel", Name="Tracks")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tracks : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tracks object.
        /// </summary>
        /// <param name="trackID">Initial value of the TrackID property.</param>
        /// <param name="description">Initial value of the Description property.</param>
        public static Tracks CreateTracks(global::System.Int32 trackID, global::System.String description)
        {
            Tracks tracks = new Tracks();
            tracks.TrackID = trackID;
            tracks.Description = description;
            return tracks;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 TrackID
        {
            get
            {
                return _TrackID;
            }
            set
            {
                if (_TrackID != value)
                {
                    OnTrackIDChanging(value);
                    ReportPropertyChanging("TrackID");
                    _TrackID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("TrackID");
                    OnTrackIDChanged();
                }
            }
        }
        private global::System.Int32 _TrackID;
        partial void OnTrackIDChanging(global::System.Int32 value);
        partial void OnTrackIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Description
        {
            get
            {
                return _Description;
            }
            set
            {
                OnDescriptionChanging(value);
                ReportPropertyChanging("Description");
                _Description = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Description");
                OnDescriptionChanged();
            }
        }
        private global::System.String _Description;
        partial void OnDescriptionChanging(global::System.String value);
        partial void OnDescriptionChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("KartingAppModel", "FK_Races_Tracks", "Races")]
        public EntityCollection<Races> Races
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Races>("KartingAppModel.FK_Races_Tracks", "Races");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Races>("KartingAppModel.FK_Races_Tracks", "Races", value);
                }
            }
        }

        #endregion

    }

    #endregion

    
}
